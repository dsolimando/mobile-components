var templateString='<style>:host {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    box-sizing: border-box;\n    overflow: hidden;\n    -webkit-tap-highlight-color: transparent;\n}\n\n.shadow-pane {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    background: #000;\n    opacity: 0;\n    transition: opacity 0.2s;\n}</style><div class="shadow-pane" style="display:none"></div><slot></slot><slot></slot><slot></slot>';const template=document.createElement("template");template.innerHTML=templateString,window.ShadyCSS&&ShadyCSS.prepareTemplate(template,"moko-view");class View extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(template.content.cloneNode(!0))}render(){this.getAttribute("transition")&&(this.style.visibility=null),"cover-vertical"==this.getAttribute("transition")?setTimeout(t=>{this.style.transform="translateY(0)"}):"cover-horizontal"==this.getAttribute("transition")?setTimeout(t=>{this.style.transform="translateX(0)"}):"fade-in"==this.getAttribute("transition")&&setTimeout(t=>{this.style.opacity=1})}hide(){"cover-vertical"==this.getAttribute("transition")?setTimeout(t=>{this.style.transform="translateY(100%)"}):"cover-horizontal"==this.getAttribute("transition")?setTimeout(t=>{this.style.transform="translateX(100%)"}):"fade-in"==this.getAttribute("transition")&&setTimeout(t=>{this.style.opacity=0})}connectedCallback(){window.ShadyCSS&&ShadyCSS.styleElement(this),this.toopacity=getComputedStyle(this).opacity,"cover-vertical"==this.getAttribute("transition")?this.style.transform="translateY(100%)":"cover-horizontal"==this.getAttribute("transition")?this.style.transform="translateX(100%)":"fade-in"==this.getAttribute("transition")&&(this.style.opacity=0),this.getAttribute("transition")&&(this.style.visibility="hidden",this.style.transition="transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94), opacity 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94)")}}customElements.define("moko-view",View);export{View};
