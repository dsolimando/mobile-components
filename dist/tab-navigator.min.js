function isLocationPathMatchingRoute(t,e){const o=/(:\w+)/g,a=e.match(o)||[];let s=[];a.length>0&&(s=a.map(t=>t.slice(1)));const n=new RegExp(e.replace(o,"(\\w+)")),i=t.match(n);let r={};if(i){const[t,...e]=i;for(var l=0;l<a.length;l++)r[s[l]]=e[l]}return{match:i,urlData:r}}class NavigatorElement extends HTMLElement{constructor(){super()}extractChildRoutes(){this.routes=Array.from(this.children).filter(t=>"MOKO-ROUTE"===t.tagName)}searchAncestor(t){const e=t[0].parentElement.closest("moko-switch-navigator, moko-stack-navigator, moko-tab-navigator");return e?this.searchAncestor([e,...t]):t}getContentElement(){return this.routes[this.routes.length-1].nextElementSibling}connectedCallback(){this.extractChildRoutes(),this.navigators||(this.navigators=this.searchAncestor([this])),addEventListener("hashchange",this)}disconnectedCallback(){removeEventListener("hashchange",this)}navigate(t){location.hash=`${this.getAncestorMatchedRoute()}/${t}`}getAncestorMatchedRoute(){return this.navigators.length>1?this.navigators[this.navigators.length-2].matchedRouteLocation:""}syncHref(t=this){const e=[...t.querySelectorAll('moko-route[selected="true"], moko-tab-route[selected="true"]')],o=location.href.split("#")[0]+"#"+this.getAncestorMatchedRoute()+(this.getAncestorMatchedRoute()?"/":"")+this.matchedRouteLocation;e.reduce((t,e)=>{const o=`${t}/${e.path}`;return o!==location.href?history.pushState({},o,o):history.replaceState({},o,o),o},o)}searchMatchingRoute(){let t,e,o,a,s=this.getAncestorMatchedRoute(),n=location.hash.substring(1).replace(s,"");if(""===(n="/"===n[0]?n.replace("/",""):n))this.matchedRouteLocation="";else{for(const i of this.routes){i.selected=!1;const r=isLocationPathMatchingRoute(n,i.path);if(r.match){e=r,(t=i).selected=!0,o=(a=`${s}${s?"/":""}${e.match[0]}`)!==this.matchedRouteLocation;break}}o&&(this.matchedRouteLocation=a)}return{matchedRoute:t,matchedResult:e,ancestorMatchedRoute:s,routeChanged:o}}}const tabBarTemplate=document.createElement("template");tabBarTemplate.innerHTML="<slot></slot>\n<style>\n    :host {\n        -webkit-tap-highlight-color: rgba(0,0,0,0);\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n        height: 50px;\n        display: flex;\n        background: #fff;\n    }\n\n    ::slotted(moko-tab) {\n        align-self: center;\n        flex-grow: 1;\n        text-align: center;\n        cursor: pointer;\n        display: flex;\n        flex-direction: column;\n    }\n</style>";const tabTemplate=document.createElement("template");tabTemplate.innerHTML="<slot>\x3c!-- ICON SLOT --\x3e</slot>\n<span>\x3c!-- title --\x3e</span>\n\n<style>\n    ::slotted(moko-icon) {\n        flex-grow: 1;\n        height: 18px;\n        padding-bottom: 5px;\n    }\n    span {\n        flex-grow: 1;\n    }\n</style>",window.ShadyCSS&&(ShadyCSS.prepareTemplate(tabBarTemplate,"moko-tab-bar"),ShadyCSS.prepareTemplate(tabTemplate,"moko-tab"));class Tab extends HTMLElement{static get observedAttributes(){return["title","name"]}attributeChangedCallback(t,e,o){switch(t){case"title":this._title=o;break;case"name":this._name=o}}constructor(){super(),this.attachShadow({mode:"open"}).appendChild(tabTemplate.content.cloneNode(!0))}connectedCallback(){window.ShadyCSS&&ShadyCSS.styleElement(this);const t=this.shadowRoot.querySelector("span");this.getAttribute("title")&&(t.innerHTML=this.getAttribute("title")),this.querySelector("moko-icon")&&(t.style.fontSize="0.7em")}get name(){return this._name}get title(){return this._title}set name(t){this.setAttribute("name",t)}set title(t){this.setAttribute("title",t)}}customElements.define("moko-tab",Tab);class TabBar extends HTMLElement{static get observedAttributes(){return["active-color"]}attributeChangedCallback(t,e,o){switch(t){case"active-color":this._activeColor=o}}constructor(){super(),this.attachShadow({mode:"open"}).appendChild(tabBarTemplate.content.cloneNode(!0))}resetActiveColorForTabs(){Array.prototype.forEach.call(this.querySelectorAll("moko-tab"),t=>{t.style.color=null})}connectedCallback(){window.ShadyCSS&&ShadyCSS.styleElement(this),this.onclick=(t=>{const e=t.target.closest("moko-tab");if(e){const t=e.getAttribute("name");this.resetActiveColorForTabs(),e.style.color=this.getAttribute("active-color"),this.dispatchEvent(new CustomEvent("moko-tab-selected",{detail:{name:t}}))}})}get activeColor(){return this._activeColor||"#A06CD5"}set activeColor(t){this.setAttribute("active-color",t)}set selected(t){this._currentTabSelected=this.querySelector(`moko-tab[name="${t}"]`),this._currentTabSelected.style.color=this.activeColor}get currentTabSelected(){return this._currentTabSelected}}customElements.define("moko-tab-bar",TabBar);class MokoRoute extends HTMLElement{static get observedAttributes(){return["path","component","selected"]}removeFirstSlash(t){return 0===t.indexOf("/")?t.substring(1):t}attributeChangedCallback(t,e,o){"path"===t?this._path=this.removeFirstSlash(o):"component"===t?this._element||(this._element=o):"selected"===t&&(this._selected=o)}get path(){return this._path}get customElement(){return this._element}set path(t){this.setAttribute("path",t)}get selected(){return this._selected}set selected(t){this.setAttribute("selected",t)}}customElements.define("moko-route",MokoRoute);class TabRoute extends MokoRoute{static get observedAttributes(){return[...MokoRoute.observedAttributes,"title","icon"]}attributeChangedCallback(t,e,o){super.attributeChangedCallback(t,e,o),"icon"===t?this._icon=o:"title"===t&&(this._title=o)}set title(t){this.setAttribute("title",t)}set icon(t){this.setAttribute("icon",t)}get title(){return this._title}get icon(){return this._icon}}customElements.define("moko-tab-route",TabRoute);const tabTemplate$1=document.createElement("template");tabTemplate$1.innerHTML='\n<div style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; height: 100%; width: 100%">\n    <div></div>\n    <moko-tab-bar></moko-tab-bar>\n</div>\n';class TabNavigator extends NavigatorElement{static get observedAttributes(){return["active-color"]}attributeChangedCallback(t,e,o){switch(t){case"active-color":this._activeColor=o}}connectedCallback(){super.connectedCallback(),this.style.display="block",this.style.height="inherit",this.style.width="inherit",this.style.position="relative";const t=this.getContentElement();t&&t.remove(),this.containers={},this.scrollsTop={};const e=tabTemplate$1.content.cloneNode(!0);this.appendChild(e),this.$tabbar=this.querySelector("moko-tab-bar"),this.$tabbar.activeColor=this._activeColor||"#A06CD5",this.routes.forEach(t=>{const e=document.createElement("moko-tab");e.title=t.title,e.name=t.path,t.icon&&(e.innerHTML=`<moko-icon name="${t.icon}"></moko-icon>`),this.$tabbar.appendChild(e)}),location.hash?this.handleEvent():this.navigate(this.routes[0].path),this.$tabbar.addEventListener("moko-tab-selected",t=>{this.currentTabPath=t.detail.name,this.navigate(t.detail.name)})}getContentElement(){return this.lastElementChild.firstElementChild||this.lastElementChild}extractChildRoutes(){this.routes=Array.from(this.children).filter(t=>"MOKO-TAB-ROUTE"===t.tagName)}handleEvent(){this.scrollsTop[this.matchedRouteLocation]=this.getContentElement()&&this.getContentElement().scrollTop;const{matchedResult:t,matchedRoute:e,routeChanged:o}=this.searchMatchingRoute();if(t&&o){if(this.containers[e.path])this.syncHref(this.containers[e.path]);else{const o=document.createElement(e.customElement);o.style.display="block",o.style.overflow="scroll",o.style.width="inherit",o.style.height="inherit",Object.keys(t.urlData).forEach(e=>{o.setAttribute(e,t.urlData[e])}),this.containers[e.path]=o}this.getContentElement().replaceWith(this.containers[e.path]),this.getContentElement().scroll(0,this.scrollsTop[e.path]||0),this.$tabbar.resetActiveColorForTabs(),this.$tabbar.selected=e.path}}}customElements.define("moko-tab-navigator",TabNavigator);export{TabRoute,TabNavigator};
